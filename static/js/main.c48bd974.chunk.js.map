{"version":3,"sources":["components/Cards.js","components/Main.js","components/Bookshelf.js","components/App.js","serviceWorker.js","index.js"],"names":["localStorageKey","Cards","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleSave","setState","saved","state","handleSave","savedBooks","currentBook","id","image","imageLink","title","bookTitle","author","bookAuthor","publisher","bookPublisher","bookLink","duplicate","i","length","push","localStorage","setItem","JSON","stringify","splice","saveIcon","react_default","a","createElement","className","src","alt","href","target","rel","onClick","Component","Main","handleInputChange","initialState","loading","emptyStr","query","search","value","trim","replace","fetch","concat","then","res","json","result","items","error","_handleKeyPress","e","key","emptyResults","bookCards","_this2","localBooksId","map","item","components_Cards","volumeInfo","hasOwnProperty","authors","join","previewLink","imageLinks","smallThumbnail","indexOf","react_router","render","_ref","history","type","name","placeholder","ref","input","onKeyPress","Bookshelf","getItem","localBookshelf","parse","App","react_router_dom","exact","path","components_Main","assign","components_Bookshelf","Boolean","window","location","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c48bd974.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst localStorageKey = 'bookFinder_bookShelf';\n\nclass Cards extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      saved: this.props.saved,\n      savedBooks: this.props.savedBooks\n    };\n  }\n\n  toggleSave = () => {\n    this.setState({\n      saved: !this.state.saved\n    }, ()=> {\n      this.handleSave();\n    })\n  }\n\n  handleSave = () => {\n    let savedBooks = this.state.savedBooks;\n    let currentBook = {\n        id: this.props.id,\n        image: this.props.imageLink,\n        title: this.props.bookTitle,\n        author: this.props.bookAuthor,\n        publisher: this.props.bookPublisher,\n        bookLink: this.props.bookLink\n      }\n    if (this.state.saved) {\n      let duplicate = false;\n      for (let i = 0; i < savedBooks.length; i++) {\n        if (savedBooks[i].id === currentBook.id) {\n          duplicate = true;\n          break;\n        }\n      }\n      if (!duplicate) {\n        savedBooks.push(currentBook);\n        localStorage.setItem(localStorageKey,JSON.stringify(savedBooks));\n        this.setState({\n          savedBooks: savedBooks\n        })\n      }\n    }\n    else {\n      for (let i = 0; i < savedBooks.length; i++) {\n        if (savedBooks[i].id === currentBook.id) {\n          savedBooks.splice(i, 1);\n          localStorage.setItem(localStorageKey, JSON.stringify(savedBooks));\n          this.setState({\n            savedBooks: savedBooks\n          })\n          break;\n        }\n      }\n    }\n  }\n  render() {\n    let saveIcon = this.state.saved?\n      <span title='Remove from My Bookshelf' className='save-star'>&#9733;</span>:\n      <span title='Save to My Bookshelf' className='save-star'>&#9734;</span>;\n    return (\n      <div className='book-card'>\n        <div className='book-cover'>\n          <img className='book-img' src={this.props.imageLink} alt={this.props.bookTitle} />\n        </div>\n        <div className='book-info'>\n          <div className='book-title'>{this.props.bookTitle}</div>\n          <div className='book-author'>By: {this.props.bookAuthor}</div>\n          <div className='book-publisher'>Published By: {this.props.bookPublisher}</div>\n          <a href={this.props.bookLink} target='_blank' rel='noopener noreferrer'>\n          <button className='book-link'>See this Book</button></a>\n        </div>\n        <div className='save-book' onClick={this.toggleSave}>\n        {saveIcon}\n        </div> \n      </div>\n    );\n  }\n}\n\nexport default Cards","import React, { Component } from 'react';\nimport '../App.css';\nimport Cards from './Cards';\nimport { Route } from 'react-router-dom';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      initialState: true,\n      loading: false,\n      emptyStr: false,\n      items: null,\n    };\n  }\n\n  handleInputChange = () => {\n    this.setState({\n      initialState: false,\n      loading: true,\n      emptyStr: false\n    })\n    let query = this.search.value.trim().replace(' ','+')\n    if (query){\n      fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}&maxResults=20`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            items: result.items,\n            loading: false\n          });\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            loading: false,\n            error\n          });\n        }\n      )\n    }\n    else {\n      this.setState({\n        emptyStr: true,\n        loading: false,\n        items: null\n      })\n    }\n  }\n\n  _handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      this.handleInputChange();\n    }\n  }\n\n  emptyResults = () => {\n    this.setState = {\n      initialState: true\n    }\n  }\n\n  render() {\n    const {savedBooks} = this.props;\n    // Get saved book id from savedBooks\n    const localBooksId = savedBooks.map((item) => item.id);\n    let bookCards;\n    if (this.state.error) {\n      bookCards = <div className='error'> Error: Cannot fetch data from Google Books!</div>\n    }\n    else if (this.state.initialState) {\n      bookCards = 'Nothing Here Yet - Try Searching For A Book';\n    }\n    else if (this.state.items) {\n      bookCards = this.state.items.map(item => \n                  <Cards key={item.id} \n                        id={item.id} \n                        bookTitle={item.volumeInfo.title} \n                        bookAuthor={item.volumeInfo.hasOwnProperty('authors')?\n                          item.volumeInfo.authors.join(', ') : 'Unknown'}\n                        bookPublisher={item.volumeInfo.hasOwnProperty('publisher')?\n                          item.volumeInfo.publisher: 'Unknown'}\n                        bookLink={item.volumeInfo.previewLink}\n                        imageLink={item.volumeInfo.hasOwnProperty('imageLinks')?\n                          item.volumeInfo.imageLinks.smallThumbnail : \n                          './img/cover.jpeg'}\n                        saved={localBooksId.indexOf(item.id) !== -1? true : false} \n                        savedBooks={savedBooks} \n                  /> );            \n    }\n    else if (!this.state.items && !this.state.loading) {\n      bookCards = 'No Book Found - Try Another Query';\n    }\n    return (\n      <div className='App'>\n        <Route render={({history}) => (\n            <span className='bookshelf-link' onClick={() => { history.push('/bookshelf') }}>\n              My Bookshelf\n            </span>\n        )} />\n        <header>\n          BOOK FINDER\n        </header>\n        <div>\n          <input className='search-input' type='search' name='SearchInput' \n          placeholder='Search by book title or author...' \n          ref={input => this.search = input}\n          onKeyPress={this._handleKeyPress} />\n          <button className='search-btn' onClick={this.handleInputChange}>Search</button>\n        </div>\n        {this.state.emptyStr && <div className='error'>Please provide a valid search query!</div>}\n        {this.state.loading && <img src='./img/loading.gif' className='loading-img' alt='loading...'/>}\n        <div className='book-display'>\n          {bookCards}\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Main;\n","import React, { Component } from 'react';\nimport Cards from './Cards';\nimport { Route } from 'react-router-dom';\n\nclass Bookshelf extends Component {\n  render() {\n    const {savedBooks} = this.props;\n    const bookCards = savedBooks.map(item => \n                  <Cards key={item.id} \n                        id={item.id} \n                        bookTitle={item.title} \n                        bookAuthor={item.author}\n                        bookPublisher={item.publisher}\n                        bookLink={item.bookLink}\n                        imageLink={item.image}\n                        saved={true}\n                        savedBooks={savedBooks}\n                  />);\n    return (\n      <div>\n        <Route render={({history}) => (\n            <span className='main-link' onClick={() => { history.push('/') }}>\n              Back to search\n            </span>\n        )} />\n        <h2>My Bookshelf</h2>\n        <div className='book-display'>\n          {bookCards}\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Bookshelf\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport '../App.css';\nimport Main from './Main';\nimport Bookshelf from './Bookshelf';\n\n// Clear localStorage\n// localStorage.clear();\nconst shelf = []\nconst localStorageKey = 'bookFinder_bookShelf';\nif (!localStorage.getItem(localStorageKey)) {\n    localStorage.setItem(localStorageKey, JSON.stringify(shelf));\n  }\nconst localBookshelf = JSON.parse(localStorage.getItem(localStorageKey));\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      savedBooks: localBookshelf\n    };\n  }\n\n  render(){\n    return (\n      <main>\n        <Router>\n          <Switch>\n            <Route exact path='/' \n              render={(props) => <Main {...props} savedBooks={this.state.savedBooks} />}\n            />\n            <Route exact path='/bookshelf' \n              render={(props) => <Bookshelf {...props} savedBooks={this.state.savedBooks} />}\n            />\n          </Switch>\n        </Router>\n      </main>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}